{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Debug C++ Binary",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceFolder}/build/debug/bin/${input:binaryName}",
            "args": [],
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}",
            "envFile": "${workspaceFolder}/config/.env",
            "externalConsole": false,
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ],
            "preLaunchTask": "Build Debug",
            "miDebuggerPath": "/usr/bin/gdb"
        },
        {
            "name": "Debug C++ Binary with 2 Arguments",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceFolder}/build/debug/bin/${input:binaryName}",
            "args": [
                "${input:arg1}",
                "${input:arg2}"
            ], // currently does not support variable # of arguments
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}",
            "envFile": "${workspaceFolder}/config/.env",
            "externalConsole": false,
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ],
            "preLaunchTask": "Build Debug",
            "miDebuggerPath": "/usr/bin/gdb"
        }
    ],
    "inputs": [
        {
            "id": "binaryName",
            "description": "Binary to debug (e.g., project_moments, angle_plotter)",
            "default": "project_moments",
            "type": "promptString"
        },
        {
            "id": "arg1",
            "description": "Program argument 1 (e.g., 'input.txt')",            
            "type": "promptString"
        },
        {
            "id": "arg2",
            "description": "Program argument 2 (e.g., 'output.txt')",
            "type": "promptString"
        },
    ]
}